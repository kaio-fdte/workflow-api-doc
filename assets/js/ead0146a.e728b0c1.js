(self.webpackChunkworkflow=self.webpackChunkworkflow||[]).push([[5777],{3905:function(n,e,t){"use strict";t.d(e,{Zo:function(){return u},kt:function(){return l}});var a=t(7294);function r(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function i(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,a)}return t}function s(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?i(Object(t),!0).forEach((function(e){r(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,a,r=function(n,e){if(null==n)return{};var t,a,r={},i=Object.keys(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||(r[t]=n[t]);return r}(n,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(n);for(a=0;a<i.length;a++)t=i[a],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(r[t]=n[t])}return r}var p=a.createContext({}),d=function(n){var e=a.useContext(p),t=e;return n&&(t="function"==typeof n?n(e):s(s({},e),n)),t},u=function(n){var e=d(n.components);return a.createElement(p.Provider,{value:e},n.children)},m={inlineCode:"code",wrapper:function(n){var e=n.children;return a.createElement(a.Fragment,{},e)}},c=a.forwardRef((function(n,e){var t=n.components,r=n.mdxType,i=n.originalType,p=n.parentName,u=o(n,["components","mdxType","originalType","parentName"]),c=d(t),l=r,f=c["".concat(p,".").concat(l)]||c[l]||m[l]||i;return t?a.createElement(f,s(s({ref:e},u),{},{components:t})):a.createElement(f,s({ref:e},u))}));function l(n,e){var t=arguments,r=e&&e.mdxType;if("string"==typeof n||r){var i=t.length,s=new Array(i);s[0]=c;var o={};for(var p in e)hasOwnProperty.call(e,p)&&(o[p]=e[p]);o.originalType=n,o.mdxType="string"==typeof n?n:r,s[1]=o;for(var d=2;d<i;d++)s[d]=t[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},6799:function(n,e,t){"use strict";t.r(e),t.d(e,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return d},toc:function(){return u},default:function(){return c}});var a=t(2122),r=t(9756),i=(t(7294),t(3905)),s=["components"],o={sidebar_position:1},p="Exemplos",d={unversionedId:"resources/examples",id:"resources/examples",isDocsHomePage:!1,title:"Exemplos",description:"A seguir, podemos observar alguns exemplos que demonstram a estrutura de uma diagrama e como seria sua blueprint.",source:"@site/docs/resources/examples.md",sourceDirName:"resources",slug:"/resources/examples",permalink:"/workflow-api-doc/docs/resources/examples",editUrl:"https://bitbucket.org/fdtedsd/workflow-api-doc/src/master/docs/resources/examples.md",version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"resourcesSidebar",previous:{title:"Comandos",permalink:"/workflow-api-doc/docs/resources/comandos"},next:{title:"Matricula",permalink:"/workflow-api-doc/docs/resources/examples/matricula"}},u=[{value:"Processo de pedir pizza v1",id:"processo-de-pedir-pizza-v1",children:[]},{value:"Processo de pedir pizza v2",id:"processo-de-pedir-pizza-v2",children:[]},{value:"Processo de pedir pizza v3",id:"processo-de-pedir-pizza-v3",children:[]},{value:"Processo de empr\xe9stimo de livro",id:"processo-de-empr\xe9stimo-de-livro",children:[]},{value:"Processo de pedido de reembolso",id:"processo-de-pedido-de-reembolso",children:[]}],m={toc:u};function c(n){var e=n.components,o=(0,r.Z)(n,s);return(0,i.kt)("wrapper",(0,a.Z)({},m,o,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"exemplos"},"Exemplos"),(0,i.kt)("p",null,"A seguir, podemos observar alguns exemplos que demonstram a estrutura de uma diagrama e como seria sua blueprint."),(0,i.kt)("h2",{id:"processo-de-pedir-pizza-v1"},"Processo de pedir pizza v1"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"pizza-1",src:t(4096).Z})),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Blueprint")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{\n  "name": "pizza1",\n  "description": "pizza1 blueprint example, only systemTasks",\n  "blueprint_spec": {\n    "requirements": ["core"],\n    "prepare": [],\n    "nodes": [\n      {\n        "id": "1",\n        "type": "Start",\n        "name": "Start Pizza 1 WF",\n        "next": "2",\n        "parameters": {\n          "input_schema": {}\n        },\n        "lane_id": "1"\n      },\n      {\n        "id": "2",\n        "type": "SystemTask",\n        "name": "Order Pizza",\n        "category": "setToBag",\n        "next": "3",\n        "lane_id": "1",\n        "parameters": {\n          "input": {\n            "client": { "$ref": "bag.name" },\n            "client1": "teste",\n            "pizzas": {\n              "qty": 2,\n              "flavors": ["mussarela", "pepperoni"],\n              "olives": false\n            }\n          }\n        }\n      },\n      {\n        "id": "3",\n        "type": "SystemTask",\n        "name": "Take the order",\n        "category": "setToBag",\n        "next": "4",\n        "lane_id": "1",\n        "parameters": {\n          "input": {\n            "orderNo": { "$js": "() => Math.floor(Math.random() * 100); " }\n          }\n        }\n      },\n      {\n        "id": "4",\n        "type": "SystemTask",\n        "name": "Prepare Pizza",\n        "category": "Timer",\n        "next": "5",\n        "lane_id": "1",\n        "parameters": {\n          "input": {},\n          "timeout": 5\n        }\n      },\n      {\n        "id": "5",\n        "type": "SystemTask",\n        "category": "SetToBag",\n        "name": "Bring Pizza",\n        "next": "6",\n        "lane_id": "1",\n        "parameters": {\n          "input": {\n            "comment": {\n              "$mustache": "check if there are {{bag.pizzas.qty}} pizzas in the bag"\n            }\n          }\n        }\n      },\n      {\n        "id": "6",\n        "type": "SystemTask",\n        "category": "setToBag",\n        "name": "Receive Pizza",\n        "next": "7",\n        "lane_id": "1",\n        "parameters": {\n          "input": {\n            "confirm": { "$ref": "bag.orderNo" }\n          }\n        }\n      },\n      {\n        "id": "7",\n        "type": "Finish",\n        "name": "Finish node",\n        "next": null,\n        "lane_id": "1"\n      }\n    ],\n    "lanes": [\n      {\n        "id": "1",\n        "name": "the_only_lane",\n        "rule": ["fn", ["&", "args"], true]\n      }\n    ],\n    "environment": {}\n  }\n}\n')),(0,i.kt)("h2",{id:"processo-de-pedir-pizza-v2"},"Processo de pedir pizza v2"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"pizza-2",src:t(4727).Z})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{\n  "name": "pizza2",\n  "description": "pizza 2 example, system and userTasks",\n  "blueprint_spec": {\n    "requirements": ["core"],\n    "prepare": [],\n    "nodes": [\n      {\n        "id": "1",\n        "type": "Start",\n        "name": "Start Pizza 2 WF",\n        "next": "2",\n        "parameters": {\n          "input_schema": {}\n        },\n        "lane_id": "1"\n      },\n      {\n        "id": "2",\n        "type": "UserTask",\n        "name": "Order Pizza",\n        "next": "3",\n        "lane_id": "1",\n        "parameters": {\n          "action": "ORDER_PIZZA",\n          "input": {}\n        }\n      },\n      {\n        "id": "3",\n        "type": "SystemTask",\n        "name": "Take the order",\n        "category": "HTTP",\n        "next": "4",\n        "lane_id": "1",\n        "parameters": {\n          "input": {\n            "status": "pending",\n            "qty": {\n              "$ref": "result.activities[0].data.qty"\n            },\n            "flavors": {\n              "$ref": "result.activities[0].data.flavors"\n            },\n            "comments": {\n              "$ref": "result.activities[0].data.comments"\n            }\n          },\n          "request": {\n            "url": "https://5faabe16b5c645001602b152.mockapi.io/order",\n            "verb": "POST",\n            "headers": {\n              "ContentType": "application/json"\n            }\n          }\n        }\n      },\n      {\n        "id": "4",\n        "type": "SystemTask",\n        "category": "SetToBag",\n        "name": "Save Order",\n        "next": "5",\n        "lane_id": "1",\n        "parameters": {\n          "input": {\n            "order": {\n              "$ref": "result.data"\n            }\n          }\n        }\n      },\n      {\n        "id": "5",\n        "type": "UserTask",\n        "name": "Prepare Pizza",\n        "next": "6",\n        "lane_id": "2",\n        "parameters": {\n          "input": {\n            "order": {\n              "$ref": "bag.order"\n            }\n          },\n          "action": "PREPARE_PIZZA"\n        }\n      },\n      {\n        "id": "6",\n        "type": "SystemTask",\n        "category": "HTTP",\n        "name": "Update Order",\n        "next": "7",\n        "lane_id": "2",\n        "parameters": {\n          "input": {\n            "status": "done"\n          },\n          "request": {\n            "url": {\n              "$mustache": "https://5faabe16b5c645001602b152.mockapi.io/order/{{bag.order.id}}"\n            },\n            "verb": "PUT",\n            "headers": {\n              "ContentType": "application/json"\n            }\n          }\n        }\n      },\n      {\n        "id": "7",\n        "type": "UserTask",\n        "name": "Receive Pizza",\n        "next": "8",\n        "lane_id": "3",\n        "parameters": {\n          "action": "RECEIVE_PIZZA",\n          "input": {}\n        }\n      },\n      {\n        "id": "8",\n        "type": "Flow",\n        "name": "Pizza ok?",\n        "next": {\n          "yes": "10",\n          "no": "9",\n          "default": "10"\n        },\n        "lane_id": "3",\n        "parameters": {\n          "input": {\n            "ok": {\n              "$ref": "result.is_order_ok"\n            }\n          }\n        }\n      },\n      {\n        "id": "9",\n        "type": "SystemTask",\n        "category": "HTTP",\n        "name": "Complaim",\n        "next": "9A",\n        "lane_id": "3",\n        "parameters": {\n          "input": {\n            "status": "complaim"\n          },\n          "request": {\n            "url": {\n              "$mustache": "https://5faabe16b5c645001602b152.mockapi.io/order/{{bag.order.id}}"\n            },\n            "verb": "PUT",\n            "headers": {\n              "ContentType": "application/json"\n            }\n          }\n        }\n      },\n      {\n        "id": "10",\n        "type": "SystemTask",\n        "category": "HTTP",\n        "name": "Praise",\n        "next": "10A",\n        "lane_id": "3",\n        "parameters": {\n          "input": {\n            "status": "praise"\n          },\n          "request": {\n            "url": {\n              "$mustache": "https://5faabe16b5c645001602b152.mockapi.io/order/{{bag.order.id}}"\n            },\n            "verb": "PUT",\n            "headers": {\n              "ContentType": "application/json"\n            }\n          }\n        }\n      },\n      {\n        "id": "9A",\n        "type": "Finish",\n        "name": "Finish Complaim",\n        "next": null,\n        "lane_id": "3"\n      },\n      {\n        "id": "10A",\n        "type": "Finish",\n        "name": "Finish Praise",\n        "next": null,\n        "lane_id": "3"\n      }\n    ],\n    "lanes": [\n      {\n        "id": "1",\n        "name": "free lane",\n        "rule": ["fn", ["&", "args"], true]\n      },\n      {\n        "id": "2",\n        "name": "restaurant lane",\n        "rule": [\n          "fn",\n          ["actor_data", "bag"],\n          [\n            "eval",\n            [\n              "apply",\n              "or",\n              [\n                "map",\n                ["fn", ["v"], ["=", "v", ["`", "restaurant"]]],\n                ["get", "actor_data", ["`", "claims"]]\n              ]\n            ]\n          ]\n        ]\n      },\n      {\n        "id": "3",\n        "name": "user lane",\n        "rule": [\n          "fn",\n          ["actor_data", "bag"],\n          [\n            "eval",\n            [\n              "apply",\n              "or",\n              [\n                "map",\n                ["fn", ["v"], ["=", "v", ["`", "user"]]],\n                ["get", "actor_data", ["`", "claims"]]\n              ]\n            ]\n          ]\n        ]\n      }\n    ],\n    "environment": {}\n  }\n}\n')),(0,i.kt)("h2",{id:"processo-de-pedir-pizza-v3"},"Processo de pedir pizza v3"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"pizza-3",src:t(6495).Z})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{\n    "name": "pizza3",\n    "description": "pizza 3 treinamento",\n    "blueprint_spec": {\n        "requirements": ["core"],\n        "prepare": [],\n        "environment": {},\n        "lanes": [\n          {\n            "id": "free",\n            "name": "free for all",\n            "rule": ["fn", ["&", "args"], true]\n          },\n          {\n            "id": "restaurant",\n            "name": "restaurant",\n            "rule": ["fn", ["actor_data", "bag"],\n                    ["eval", ["apply", "or", ["map", ["fn", ["v"],["=", "v", ["`", "restaurant"]]],\n                    ["get", "actor_data", ["`", "claims"]]]]]\n            ]\n          },\n          {\n            "id": "cx",\n            "name": "customer support",\n            "rule": ["fn", ["actor_data", "bag"],\n                    ["eval", ["apply", "or", ["map", ["fn", ["v"],["=", "v", ["`", "cx"]]],\n                    ["get", "actor_data", ["`", "claims"]]]]]\n            ]\n          }, {\n            "id": "customer",\n            "name": "creatorOnly",\n            "rule": ["fn", ["actor_data", "bag"],\n                    ["=", ["get", "bag", ["`", "creatorId"]],\n                    ["get", "actor_data", ["`", "actor_id"]]]\n            ]\n        }\n        ],\n        "nodes": [\n          {\n            "name": "Start pizza3",\n            "type": "Start",\n            "lane_id": "free",\n            "id": "1",\n            "next": "1-1",\n            "parameters": {\n              "input_schema": {\n                "type": "object",\n                "properties": {\n                  "id": { "type": "string", "format": "uuid" },\n                  "name": { "type": "string" }\n                },\n                "required": ["name"]\n              }\n            }\n          },\n          {\n            "id": "1-1",\n            "name": "Order Pizza",\n            "type": "userTask",\n            "lane_id": "free",\n            "next": "1-1A",\n            "parameters": {\n              "action": "ORDER_PIZZA",\n              "input": {},\n              "activity_manager": "commit"\n            }\n          },\n          {\n            "id": "1-1A",\n            "name": "bag actor_id",\n            "type": "systemTask",\n            "category": "setToBag",\n            "lane_id": "free",\n            "next": "1-1B",\n            "parameters": {\n              "input": {\n                "creatorId": { "$ref": "actor_data.actor_id" },\n                "user_data": { "$ref": "result.activities[0].data" }\n              }\n            }\n          },\n          {\n            "id": "1-1B",\n            "name": "bag actor_id",\n            "type": "systemTask",\n            "category": "setToBag",\n            "lane_id": "free",\n            "next": "1-2",\n            "parameters": {\n              "input": {\n                "key": { "$js": "({bag}) => (!bag.user_data.qty || !bag.user_data.flavors || bag.user_data.flavors.length == 0) ? false : true" }\n              }\n            }\n          },\n          {\n            "id": "1-2",\n            "name": "is order correct",\n            "type": "flow",\n            "lane_id": "customer",\n            "next": {\n              "false": "2-99",\n              "true": "1-3",\n              "default": "1-3"\n            },\n            "parameters": {\n              "input": {\n                "key": { "$ref": "bag.key" }\n              }\n            }\n          },{\n            "id": "1-3",\n            "name": "take the order",\n            "type": "systemTask",\n            "category": "http",\n            "lane_id": "customer",\n            "next": "1-3A",\n            "parameters": {\n              "input": {\n                "status": "pending",\n                "qty": { "$ref": "bag.user_data.qty" },\n                "flavors": { "$ref": "bag.user_data.flavors"},\n                "comments": { "$ref": "bag.user_data.comments" }\n              },\n              "request": {\n                "url": "https://5faabe16b5c645001602b152.mockapi.io/order",\n                "verb": "POST",\n                "headers": {\n                  "ContentType": "application/json"\n                }\n              }\n            }\n          },\n          {\n            "id": "1-3A",\n            "name": "bag order",\n            "type": "systemTask",\n            "category": "setToBag",\n            "lane_id": "customer",\n            "next": "1-4",\n            "parameters": {\n              "input": {\n                "order": { "$ref": "result.data" }\n              }\n            }\n          },{\n            "id": "1-4",\n            "name": "acknowledge order",\n            "type": "userTask",\n            "lane_id": "restaurant",\n            "next": "1-5",\n            "parameters": {\n              "action": "ACKNOWLEDGE_ORDER",\n              "activity_manager": "commit",\n              "input": {\n                  "order": { "$ref": "bag.order" }\n              }\n            }\n          },{\n            "id": "1-5",\n            "name": "is order ok",\n            "type": "flow",\n            "lane_id": "restaurant",\n            "next": {\n              "true": "1-6",\n              "false": "3-99",\n              "default": "3-99"\n            },\n            "parameters": {\n              "input": {\n                "key": { "$ref": "result.activities[0].data.order_ok" }\n              }\n            }\n          },\n          {\n            "id": "1-6",\n            "type": "SystemTask",\n            "category": "HTTP",\n            "name": "Update Order",\n            "next": "1-6A",\n            "lane_id": "restaurant",\n            "parameters": {\n              "input": {\n                "status": "started"\n              },\n              "request": {\n                "url": { "$mustache": "https://5faabe16b5c645001602b152.mockapi.io/order/{{bag.order.id}}" },\n                "verb": "PUT",\n                "headers": {\n                  "ContentType": "application/json"\n                }\n              }\n            }\n          },{\n            "id": "1-6A",\n            "name": "bag order",\n            "type": "systemTask",\n            "category": "setToBag",\n            "lane_id": "customer",\n            "next": "1-7",\n            "parameters": {\n              "input": {\n                "order": { "$ref": "result.data" }\n              }\n            }\n          },\n          {\n            "id": "1-7",\n            "name": "notify user pizza started",\n            "type": "userTask",\n            "lane_id": "customer",\n            "next": "1-8",\n            "parameters": {\n              "action": "NOTIFY_USER",\n              "input": {\n                "orderNo": { "$ref": "bag.order.id" },\n                "message": "seu pedido foi iniciado"\n              },\n              "activity_manager": "notify"\n            }\n          },\n          {\n            "id": "1-8",\n            "type": "SystemTask",\n            "name": "wait 1 minutes",\n            "category": "Timer",\n            "next": "1-9",\n            "lane_id": "customer",\n            "parameters": {\n              "input": {},\n              "timeout": 60\n            }\n          },{\n            "id": "1-9",\n            "type": "SystemTask",\n            "category": "HTTP",\n            "name": "Update Order",\n            "next": "1-10",\n            "lane_id": "restaurant",\n            "parameters": {\n              "input": {},\n              "request": {\n                "url": { "$mustache": "https://5faabe16b5c645001602b152.mockapi.io/order/{{bag.order.id}}" },\n                "verb": "GET",\n                "headers": {\n                  "ContentType": "application/json"\n                }\n              }\n            }\n          },{\n            "id": "1-10",\n            "name": "order status",\n            "type": "flow",\n            "lane_id": "restaurant",\n            "next": {\n              "received": "1-99",\n              "on_route": "4-1",\n              "default": "5-1"\n            },\n            "parameters": {\n              "input": {\n                "key": { "$ref": "result.data.status" }\n              }\n            }\n          },\n          {\n            "id": "1-99",\n            "name": "Finish - Order delivered",\n            "type": "Finish",\n            "lane_id": "customer",\n            "next": null\n          },\n          {\n            "id": "2-99",\n            "name": "Finish - Order incorrect",\n            "type": "Finish",\n            "lane_id": "customer",\n            "next": null\n          },\n          {\n            "id": "3-99",\n            "name": "Finish - Order cannot be done",\n            "type": "Finish",\n            "lane_id": "customer",\n            "next": null\n          },\n          {\n            "id": "4-1",\n            "type": "SystemTask",\n            "name": "wait 5 minutes",\n            "category": "Timer",\n            "next": "1-9",\n            "lane_id": "customer",\n            "parameters": {\n              "input": {},\n              "timeout": 60\n            }\n          },{\n            "id": "5-1",\n            "type": "SystemTask",\n            "category": "HTTP",\n            "name": "Update Order",\n            "next": "5-2",\n            "lane_id": "restaurant",\n            "parameters": {\n              "input": {\n                "status": "complaim"\n              },\n              "request": {\n                "url": { "$mustache": "https://5faabe16b5c645001602b152.mockapi.io/order/{{bag.order.id}}" },\n                "verb": "PUT",\n                "headers": {\n                  "ContentType": "application/json"\n                }\n              }\n            }\n          },{\n            "id": "5-2",\n            "type": "userTask",\n            "name": "Contact Customer",\n            "next": "5-3",\n            "lane_id": "cx",\n            "parameters": {\n              "action": "CONTACT_CUSTOMER",\n              "input": {\n                "order": { "$ref": "bag.order" }\n              },\n              "activity_manager": "commit"\n            }\n          },{\n            "id": "5-3",\n            "type": "Flow",\n            "name": "action",\n            "lane_id": "cx",\n            "next": {\n              "cancel": "6-1",\n              "wait": "5-4",\n              "default": "5-4"\n            },\n            "parameters": {\n              "input": {\n                "decision": { "$ref": "result.activities[0].data.action" }\n              }\n            }\n          },{\n            "id": "5-4",\n            "type": "systemTask",\n            "category": "timer",\n            "name": "wait X minutes",\n            "lane_id": "cx",\n            "next": "1-9",\n            "parameters": {\n              "input": {},\n              "timeout": 60\n            }\n          },{\n            "id": "6-1",\n            "type": "SystemTask",\n            "category": "HTTP",\n            "name": "Update Order",\n            "next": "6-99",\n            "lane_id": "cx",\n            "parameters": {\n              "input": {\n                "status": "cancel"\n              },\n              "request": {\n                "url": { "$mustache": "https://5faabe16b5c645001602b152.mockapi.io/order/{{bag.order.id}}" },\n                "verb": "PUT",\n                "headers": {\n                  "ContentType": "application/json"\n                }\n              }\n            }\n          },\n          {\n            "id": "6-99",\n            "name": "Finish - Order cancelled",\n            "type": "Finish",\n            "lane_id": "customer",\n            "next": null\n          }\n        ]\n    }\n}\n')),(0,i.kt)("h2",{id:"processo-de-empr\xe9stimo-de-livro"},"Processo de empr\xe9stimo de livro"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"emprestimo-livro",src:t(3785).Z})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{\n  "name": "example_escrever_capitulo",\n  "description": "",\n  "blueprint_spec": {\n    "environment": {},\n    "require": ["core"],\n    "prepare": [],\n    "lanes": [\n      {\n        "id": "free",\n        "name": "the_only_lane",\n        "rule": ["fn", ["&", "args"], true]\n      }\n    ],\n    "nodes": [\n        {\n            "id": "0",\n            "name": "Iniciar Capitulo",\n            "next": "1",\n            "type": "start",\n            "lane_id": "free",\n            "parameters": {\n                "input_schema": {\n                  "type": "object",\n                  "properties": {\n                    "tema": { "type": "string" }\n                  }\n                }\n            }\n        },\n        {\n            "id": "1",\n            "name": "Pesquisa tema",\n            "next": "2",\n            "type": "userTask",\n            "lane_id": "free",\n            "parameters": {\n                "action": "DO_RESEARCH",\n                "input": {}\n            }\n        },\n        {\n            "id": "2",\n            "name": "Escreve texto",\n            "next": "3",\n            "type": "userTask",\n            "lane_id": "free",\n            "parameters": {\n                "action": "WRITE_TEXT",\n                "input": {}\n            }\n        },\n        {\n          "id": "3",\n          "name": "Precisa de gr\xe1ficos",\n          "next": {\n            "true": "G1",\n            "default": "4"\n          },\n          "type": "flow",\n          "lane_id": "free",\n          "parameters": {\n            "input": {\n              "key": { "$ref": "result.activitites[0].data.graphs" }\n            }\n          }\n        },\n        {\n            "id": "4",\n            "name": "Organizar refer\xeancias",\n            "next": "5",\n            "type": "userTask",\n            "lane_id": "free",\n            "parameters": {\n                "action": "ORGANIZE_REFS",\n                "input": {}\n            }\n        },\n        {\n            "id": "5",\n            "name": "Reler conte\xfado",\n            "next": "6",\n            "type": "userTask",\n            "lane_id": "free",\n            "parameters": {\n                "action": "REVIEW",\n                "input": {}\n            }\n        },\n        {\n          "id": "6",\n          "name": "Precisa de revis\xe3o",\n          "next": {\n            "true": "2",\n            "default": "7"\n          },\n          "type": "flow",\n          "lane_id": "free",\n          "parameters": {\n            "input": {\n              "key": { "$ref": "result.activitites[0].data.review" }\n            }\n          }\n        },\n        {\n          "id": "7",\n          "name": "Finaliza capitulo",\n          "next": "8",\n          "type": "userTask",\n          "lane_id": "free",\n          "parameters": {\n            "action": "FINALIZE",\n            "input": {}\n          }\n        },\n        {\n          "id": "8",\n          "name": "Fim do cap\xedtulo",\n          "type": "Finish",\n          "lane_id": "free",\n          "next": null\n        },\n        {\n          "id": "G1",\n          "name": "Gerar gr\xe1ficos",\n          "next": "G2",\n          "type": "userTask",\n          "lane_id": "free",\n          "parameters": {\n            "action": "BUILD_GRAPHS",\n            "input": {}\n          }\n        },\n        {\n          "id": "G2",\n          "name": "Incluir gr\xe1ficos no texto",\n          "next": "4",\n          "type": "userTask",\n          "lane_id": "free",\n          "parameters": {\n            "action": "MERGE_GRAPHS",\n            "input": {}\n          }\n        }        \n    ]\n  }\n}\n')),(0,i.kt)("h2",{id:"processo-de-pedido-de-reembolso"},"Processo de pedido de reembolso"),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"pedido-reembolso",src:t(9147).Z})),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'{\n  "name": "example_pedido_reembolso",\n  "description": "",\n  "blueprint_spec": {\n    "environment": {},\n    "require": ["core"],\n    "prepare": [],\n    "lanes": [\n      {\n        "id": "usuario",\n        "name": "qualquer usuario",\n        "rule": ["fn", ["&", "args"], true]\n      },\n      {\n        "id": "gestor",\n        "name": "somente para gestores",\n        "rule": ["fn", ["&", "args"], true]\n      },\n      {\n        "id": "financeiro",\n        "name": "somente depto financeiro",\n        "rule": ["fn", ["&", "args"], true]\n      }\n    ],\n    "nodes": [\n        {\n            "id": "0",\n            "name": "Iniciar Pedido",\n            "next": "1",\n            "type": "start",\n            "lane_id": "usuario",\n            "parameters": {\n              "input_schema": {}\n            }\n        },\n        {\n            "id": "1",\n            "name": "Enviar pedido",\n            "next": "2",\n            "type": "userTask",\n            "lane_id": "usuario",\n            "parameters": {\n                "action": "DO_REQUEST",\n                "input": {}\n            }\n        },\n        {\n            "id": "2",\n            "name": "Cadastrar pedido",\n            "next": "3",\n            "type": "systemTask",\n            "category": "http",\n            "lane_id": "free",\n            "parameters": {\n              "request": {\n                "url": "url",\n                "verb": "POST",\n                "headers": {\n                  "ContentType": "application/json"\n                }\n              },\n              "input": {\n                "status": "pending",\n                "amount": { "$ref": "result.activities[0].data.amount" },\n                "requester": { "$ref": "result.activities[0].data.requester"},\n                "comments": { "$ref": "result.activities[0].data.comments" }\n              }\n            }\n        },\n        {\n            "id": "3",\n            "name": "Aprovar pedido",\n            "next": "4",\n            "type": "userTask",\n            "lane_id": "gestor",\n            "parameters": {\n                "action": "APPROVE_REQUEST",\n                "input": {\n                  "status": { "$ref": "result.data.status" },\n                  "amount": { "$ref": "result.data.amount" },\n                  "requester": { "$ref": "result.data.requester"},\n                  "comments": { "$ref": "result.data.comments" }\n                }\n            }\n        },\n        {\n          "id": "4",\n          "name": "Pedido aprovado?",\n          "next": {\n            "APPROVED": "5",\n            "DECLINED": "E1",\n            "default": "3"\n          },\n          "type": "flow",\n          "lane_id": "gestor",\n          "parameters": {\n            "input": {\n              "key": { "$ref": "result.activitites[0].data.status" }\n            }\n          }\n        },\n        {\n            "id": "5",\n            "name": "Confirmar pedido",\n            "next": "6",\n            "type": "systemTask",\n            "category": "http",\n            "lane_id": "gestor",\n            "parameters": {\n              "request": {\n                "url": "url",\n                "verb": "PUT",\n                "headers": {\n                  "ContentType": "application/json"\n                }\n              },\n              "input": {\n                "status": "APPROVED"\n              }\n            }\n        },\n        {\n            "id": "6",\n            "name": "Revisar pedido",\n            "next": "7",\n            "type": "userTask",\n            "lane_id": "financeiro",\n            "parameters": {\n                "action": "REVIEW_REQUEST",\n                "input": {\n                  "status": { "$ref": "result.data.status" },\n                  "amount": { "$ref": "result.data.amount" },\n                  "requester": { "$ref": "result.data.requester"},\n                  "comments": { "$ref": "result.data.comments" }\n                }\n            }\n        },\n        {\n          "id": "7",\n          "name": "Pedido aceito?",\n          "next": {\n            "REVIEWED": "8",\n            "DECLINED": "E1",\n            "default": "6"\n          },\n          "type": "flow",\n          "lane_id": "financeiro",\n          "parameters": {\n            "input": {\n              "key": { "$ref": "result.activitites[0].data.status" }\n            }\n          }\n        },\n        {\n            "id": "8",\n            "name": "Realizar dep\xf3sito",\n            "next": "9",\n            "type": "userTask",\n            "lane_id": "financeiro",\n            "parameters": {\n                "action": "DO_TRANSFER",\n                "input": {}\n            }\n        },\n        {\n            "id": "9",\n            "name": "Realizar dep\xf3sito",\n            "next": "10",\n            "type": "systemTask",\n            "category": "http",\n            "lane_id": "financeiro",\n            "parameters": {\n              "request": {\n                "url": "url",\n                "verb": "PUT",\n                "headers": {\n                  "ContentType": "application/json"\n                }\n              },\n              "input": {\n                "status": "SETTLED"\n              }\n            }\n        },\n        {\n          "id": "10",\n          "name": "Avisar requisitante",\n          "next": "11",\n          "type": "userTask",\n          "lane_id": "free",\n          "parameters": {\n            "action": "NOTIFY_USER",\n            "input": {\n              "status": { "$ref": "result.data.status" }\n            }\n          }\n        },\n        {\n          "id": "11",\n          "name": "Fim do pedido",\n          "type": "Finish",\n          "lane_id": "free",\n          "next": null\n        },\n        {\n            "id": "E1",\n            "name": "Atualizar pedido",\n            "next": "E2",\n            "type": "systemTask",\n            "category": "http",\n            "lane_id": "free",\n            "parameters": {\n              "request": {\n                "url": "url",\n                "verb": "PUT",\n                "headers": {\n                  "ContentType": "application/json"\n                }\n              },\n              "input": {\n                "status": "DECLINED"\n              }\n            }\n        },\n        {\n          "id": "E2",\n          "name": "Avisar requisitante",\n          "next": "E3",\n          "type": "userTask",\n          "lane_id": "free",\n          "parameters": {\n            "action": "NOTIFY_USER",\n            "input": {\n              "status": { "$ref": "result.data.status" }\n            }\n          }\n        },\n        {\n          "id": "E3",\n          "name": "Fim do pedido - recusado",\n          "type": "Finish",\n          "lane_id": "free",\n          "next": null\n        }       \n    ]\n  }\n}\n')))}c.isMDXComponent=!0},3785:function(n,e,t){"use strict";e.Z=t.p+"assets/images/emprestimo-livro-capitulo-68a1164d7fe26d4efcea460c5e46acc0.png"},9147:function(n,e,t){"use strict";e.Z=t.p+"assets/images/pedido-reembolso-9e4d3dc01f9d73f6b11d90c1c79c1df1.png"},4096:function(n,e,t){"use strict";e.Z=t.p+"assets/images/pizza-1-bc3aeb27bdc0ace7476a5f126afdc57c.png"},4727:function(n,e,t){"use strict";e.Z=t.p+"assets/images/pizza-2-66df744a6f00b3b38cc10c8346baf59f.png"},6495:function(n,e,t){"use strict";e.Z=t.p+"assets/images/pizza-3-764de8e188634e5ab980d3cdea051070.png"}}]);