{
    "routes": {
        "/token": {
            "post": {
                "description": "URL for generating Token",
                "input": [
                    {
                        "$ref": "#/components/schemas/TokenRequest"
                    }
                ],
                "output": {
                    "200": {
                        "description": "Acesso garantido",
                        "$ref": "#/components/schemas/TokenResponse"
                    }
                }
            }
        },
        "/workflows": {
            "get": {
                "description": "Get all workflows for actor",
                "output": {
                    "oneOf": [
                        {
                            "200": {
                                "description": "Done. Here is the list of all Workflows",
                                "$ref": "#/components/schemas/Workflows"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            }
                        }
                    ]
                }
            },
            "post": {
                "description": "Save workflow",
                "input": [
                    {
                        "type": "object",
                        "$ref": "#/components/schemas/SaveWorkflow"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "201": {
                                "description": "A requisição foi bem sucedida e um novo recurso foi criado como resultado. Esta é uma tipica resposta enviada após uma requisição POST.",
                                "type": "object",
                                "workflow_id": {
                                    "type": "string",
                                    "example": "59e11731-040e-4fb7-9e54-9c9befecbf7e"
                                },
                                "workflow_url": {
                                    "type": "string",
                                    "example": "localhost:3000/workflows/59e11731-040e-4fb7-9e54-9c9befecbf7e"
                                }
                            },
                            "400": {
                                "description": "Essa resposta significa que o servidor não entendeu a requisição pois está com uma sintaxe inválida.",
                                "type": "object",
                                "properties": {
                                    "error": {
                                        "type": "string",
                                        "example": "error message"
                                    }
                                }
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            }
                        }
                    ]
                }
            }
        },
        "/workflows/{id}": {
            "get": {
                "description": "Returns a single workflow",
                "input": [
                    {
                        "type": "string",
                        "name": "id"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "200": {
                                "description": "Workflow with desired id found",
                                "$ref": "#/components/schemas/Workflow"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            },
                            "404": {
                                "type": "string",
                                "description": "Workflow not found"
                            }
                        }
                    ]
                }
            },
            "delete": {
                "description": "Delete workflow",
                "input": [
                    {
                        "type": "string",
                        "name": "id"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "204": {
                                "description": "Workflow deleted successfully"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            },
                            "404": {
                                "type": "string",
                                "description": "Workflow not found"
                            }
                        }
                    ]
                }
            }
        },
        "/workflows/name/{name}": {
            "get": {
                "description": "Returns a single workflow",
                "input": [
                    {
                        "type": "string",
                        "name": "id"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "200": {
                                "description": "Workflow with desired name found",
                                "$ref": "#/components/schemas/Workflow"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            },
                            "404": {
                                "type": "string",
                                "description": "Workflow not found"
                            }
                        }
                    ]
                }
            }
        },
        "/workflows/{id}/status": {
            "get": {
                "description": "Fetch process count from status",
                "input": [
                    {
                        "type": "string",
                        "name": "id",
                        "description": "workflow_id"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "200": {
                                "type": "integer",
                                "description": "Process count"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            },
                            "404": {
                                "type": "string",
                                "description": "Workflow not found"
                            }
                        }
                    ]
                }
            }
        },
        "/workflows/{id}/processes": {
            "get": {
                "description": "Fetch process list from workflow",
                "input": [
                    {
                        "type": "string",
                        "name": "id",
                        "description": "workflow_id"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "200": {
                                "description": "Process list",
                                "$ref": "#/components/schemas/Workflow"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            }
                        }
                    ]
                }
            }
        },
        "/workflows/{id}/create": {
            "post": {
                "description": "Create process",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "description": "workflow_id"
                    }
                ],
                "input": [
                    {
                        "type": "object"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "201": {
                                "description": "Process Created",
                                "process_id": {
                                    "type": "string",
                                    "example": "cc5ed811-4519-400a-a2c5-80691b974c30"
                                },
                                "process_url": {
                                    "type": "string"
                                }
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            },
                            "404": {
                                "type": "string",
                                "description": "Workflow not found"
                            }
                        }
                    ]
                }
            }
        },
        "/workflows/name/{name}/create": {
            "post": {
                "description": "Create process from workflow name",
                "parameters": [
                    {
                        "type": "string",
                        "name": "name"
                    }
                ],
                "input": [
                    {
                        "type": "object"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "201": {
                                "description": "Process created",
                                "process_id": {
                                    "type": "string",
                                    "example": "cc5ed811-4519-400a-a2c5-80691b974c30"
                                },
                                "process_url": {
                                    "type": "string"
                                }
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            },
                            "404": {
                                "type": "string",
                                "description": "Workflow not found"
                            }
                        }
                    ]
                }
            }
        },
        "/processes/activityManager/{id}": {
            "get": {
                "description": "Fetch ActivityManager by id",
                "parameters": [
                    {
                        "type": "string",
                        "name": "id",
                        "description": "activity_manager_id"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "200": {
                                "type": "string",
                                "description": "ActivityManager with desired id found"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            },
                            "404": {
                                "type": "string",
                                "description": "Workflow not found"
                            }
                        }
                    ]
                }
            }
        },
        "/processes/available": {
            "get": {
                "description": "Fetch available activities for actor",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "description": "Filter by workflow",
                        "type": "string"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "200": {
                                "type": "string",
                                "description": "Available activities"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            }
                        }
                    ]
                }
            }
        },
        "/processes/done": {
            "get": {
                "process": "Fetch done activities for actor",
                "parameters": [
                    {
                        "name": "workflow_id",
                        "description": "Filter by workflow",
                        "type": "string"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "200": {
                                "type": "string",
                                "description": "Available activities"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            }
                        }
                    ]
                }
            }
        },
        "/processes/{id}/activity": {
            "get": {
                "description": "Fetch available activity for process",
                "parameters": [
                    {
                        "name": "id",
                        "description": "process_id",
                        "type": "string"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "200": {
                                "description": "Available activity",
                                "type": "string"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            }
                        }
                    ]
                }
            }
        },
        "/processes/{process_id}/commit": {
            "post": {
                "description": "Commit activity",
                "parameters": [
                    {
                        "name": "process_id",
                        "type": "string"
                    }
                ],
                "input": [
                    {
                        "description": "External input",
                        "type": "object"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "200": {
                                "description": "Activity committed",
                                "type": "string"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            }
                        }
                    ]
                }
            }
        },
        "/processes/{process_id}/push": {
            "post": {
                "description": "Push activity",
                "parameters": [
                    {
                        "type": "string",
                        "name": "process_id"
                    }
                ],
                "input": [
                    {
                        "description": "External input",
                        "type": "object"
                    }
                ]
            },
            "output": {
                "oneOf": [
                    {
                        "200": {
                            "description": "Activity pushed",
                            "$ref": "#/components/schemas/Workflow"
                        },
                        "401": {
                            "description": "Authorization Error",
                            "$ref": "#/components/responses/UnauthorizedError"
                        },
                        "404": {
                            "type": "string",
                            "description": "Workflow not found"
                        }
                    }
                ]
            }
        },
        "/activity_manager/{activity_manager_id}/submit": {
            "post": {
                "description": "Submit activity by ActivityManager id",
                "parameters": [
                    {
                        "name": "activity_manager_id",
                        "type": "string"
                    }
                ],
                "input": {
                    "description": "External input",
                    "type": "object"
                }
            },
            "output": {
                "oneOf": [
                    {
                        "202": {
                            "description": "Activity submitted",
                            "type": "object",
                            "$ref": "#/components/schemas/Workflow"
                        },
                        "401": {
                            "description": "Authorization Error",
                            "$ref": "#/components/responses/UnauthorizedError"
                        },
                        "500": {
                            "description": "Activity manager not found or error submitting",
                            "type": "object",
                            "properties": {
                                "error": {
                                    "type": "string",
                                    "example": "error"
                                }
                            }
                        }
                    }
                ]
            }
        },
        "/processes": {
            "get": {
                "description": "Returns a single workflow",
                "output": {
                    "oneOf": [
                        {
                            "200": {
                                "description": "Process list",
                                "type": "string"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            }
                        }
                    ]
                }
            }
        }
    },
    "/processes/{id}": {
        "get": {
            "description": "Fetch process by id",
            "parameters": [
                {
                    "name": "id",
                    "description": "process_id",
                    "type": "string"
                }
            ],
            "output": {
                "oneOf": [
                    {
                        "200": {
                            "description": "Workflow with desired id found",
                            "type": "string"
                        },
                        "401": {
                            "description": "Authorization Error",
                            "$ref": "#/components/responses/UnauthorizedError"
                        },
                        "404": {
                            "type": "string",
                            "description": "Process not found"
                        }
                    }
                ]
            }
        },
        "/processes/{id}/history": {
            "get": {
                "description": "Fetch process state history",
                "parameters": [
                    {
                        "name": "id",
                        "description": "process_id",
                        "type": "string"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "200": {
                                "description": "Process state history",
                                "type": "string"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            },
                            "404": {
                                "type": "string",
                                "description": "Process not found"
                            }
                        }
                    ]
                }
            }
        },
        "/processes/{id}/run": {
            "post": {
                "description": "Run process",
                "parameters": [
                    {
                        "name": "id",
                        "description": "process_id",
                        "type": "string"
                    }
                ],
                "input": {
                    "description": "Input",
                    "type": "object"
                }
            },
            "output": {
                "oneOf": [
                    {
                        "200": {
                            "description": "Process running",
                            "type": "string"
                        },
                        "401": {
                            "description": "Authorization Error",
                            "$ref": "#/components/responses/UnauthorizedError"
                        },
                        "404": {
                            "type": "string",
                            "description": "Process not found"
                        }
                    }
                ]
            }
        },
        "/processes/{id}/abort": {
            "post": {
                "description": "Abort process",
                "parameters": [
                    {
                        "name": "id",
                        "description": "process_id",
                        "type": "string"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "200": {
                                "description": "Process aborted",
                                "type": "string"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            },
                            "404": {
                                "type": "string",
                                "description": "Process not found"
                            }
                        }
                    ]
                }
            }
        },
        "/processes/{id}/state": {
            "post": {
                "description": "Set process state",
                "parameters": [
                    {
                        "name": "id",
                        "description": "process_id",
                        "type": "string"
                    }
                ],
                "input": {
                    "description": "Process state data",
                    "process_state": {
                        "type": "object"
                    }
                },
                "output": {
                    "oneOf": [
                        {
                            "200": {
                                "description": "Process state set",
                                "type": "string"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            },
                            "404": {
                                "type": "string",
                                "description": "Process not found"
                            }
                        }
                    ]
                }
            }
        },
        "/packages": {
            "post": {
                "input": [
                    {
                        "description": "Input package",
                        "type": "object"
                    }
                ],
                "output": {
                    "oneOf": {
                        "201": {
                            "description": "Package saved",
                            "type": "object",
                            "package_id": {
                                "type": "string",
                                "example": "a36ea500-3c72-4af1-aabe-cd2c7d56ca6c"
                            },
                            "package_url": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Error saving package",
                        "type": "object",
                        "error": {
                            "type": "string",
                            "example": "error"
                        }
                    }
                },
                "401": {
                    "description": "Authorization Error",
                    "$ref": "#/components/responses/UnauthorizedError"
                }
            }
        },
        "/packages/{id}": {
            "get": {
                "description": "Fetch package by id",
                "parameters": [
                    {
                        "name": "id",
                        "description": "package_id",
                        "type": "string"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "200": {
                                "description": "Package found",
                                "type": "string"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            },
                            "404": {
                                "type": "string",
                                "description": "Package not found"
                            }
                        }
                    ]
                    
                }
            },
            "delete": {
                "description": "Delete package",
                "parameters": [
                    {
                        "name": "id",
                        "description": "package_id",
                        "type": "string"
                    }
                ],
                "output": {
                    "oneOf": [
                        {
                            "204": {
                                "type": "string",
                                "description": "Package deleted"
                            },
                            "401": {
                                "description": "Authorization Error",
                                "$ref": "#/components/responses/UnauthorizedError"
                            },
                            "404": {
                                "type": "string",
                                "description": "Package not found"
                            }
                        }
                    ]
                    
                }
            }
        }
    },
    "components": {
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        },
        "responses": {
            "UnauthorizedError": {
                "description": "Não autenticado deve se autenticar para obter a resposta solicitada."
            }
        },
        "schemas": {
            "TokenRequest": {
                "type": "object",
                "properties": {
                    "actor_id": {
                        "type": "string",
                        "example": "6844da36-aacf-40e7-aedc-576a51dd9046"
                    },
                    "claims": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "user"
                        }
                    }
                }
            },
            "TokenResponse": {
                "required": [
                    "actor_id",
                    "claims"
                ],
                "type": "object",
                "properties": {
                    "actor_id": {
                        "type": "string",
                        "example": "6844da36-aacf-40e7-aedc-576a51dd9046"
                    },
                    "claims": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "user"
                        }
                    }
                }
            },
            "SaveWorkflow": {
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "example": "Lorem Ipsun"
                    },
                    "description": {
                        "type": "string",
                        "example": "Description Test"
                    },
                    "blueprint_spec": {
                        "type": "object",
                        "properties": {
                            "id": {
                                "type": "string",
                                "example": "dd349511-3b6b-4271-8a0b-69e47d34c1e4"
                            },
                            "name": {
                                "type": "string",
                                "example": "Example workflow"
                            },
                            "description": {
                                "type": "string",
                                "example": "Description of what the workflow does"
                            }
                        }
                    }
                }
            },
            "Timestamp": {
                "type": "string",
                "example": "2020-11-17T20:25:44.188Z"
            },
            "Workflows": {
                "type": "array",
                "items": {
                    "$ref": "#/components/schemas/Workflow"
                }
            },
            "Workflow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "dd349511-3b6b-4271-8a0b-69e47d34c1e4"
                    },
                    "name": {
                        "type": "string",
                        "example": "Example workflow"
                    },
                    "description": {
                        "type": "string",
                        "example": "Description of what the workflow does"
                    },
                    "blueprint_spec": {
                        "$ref": "#/components/schemas/BlueprintSpec"
                    },
                    "created_at": {
                        "$ref": "#/components/schemas/Timestamp"
                    },
                    "version": {
                        "type": "integer",
                        "example": 1
                    }
                }
            },
            "BlueprintSpec": {
                "type": "object",
                "properties": {
                    "lanes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Lane"
                        }
                    },
                    "nodes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Node"
                        }
                    },
                    "prepare": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "prepare"
                        }
                    },
                    "environment": {
                        "type": "object"
                    },
                    "requirements": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "example": "core"
                        }
                    }
                }
            },
            "Lane": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "the_only_lane"
                    },
                    "rule": {
                        "type": "array",
                        "items": {
                            "oneOf": [
                                {
                                    "type": "string",
                                    "example": "fn"
                                },
                                {
                                    "type": "array",
                                    "example": [
                                        "&",
                                        "args"
                                    ]
                                },
                                {
                                    "type": "boolean"
                                }
                            ]
                        }
                    }
                }
            },
            "Node": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string",
                        "example": "1"
                    },
                    "name": {
                        "type": "string",
                        "example": "Start Node"
                    },
                    "type": {
                        "type": "string",
                        "example": "Start"
                    },
                    "lane_id": {
                        "type": "string",
                        "example": "1"
                    },
                    "parameters": {
                        "type": "object",
                        "properties": {
                            "input_schema": {
                                "type": "object"
                            }
                        }
                    }
                }
            }
        }
    },
    "security": [
        {
            "BearerAuth": []
        }
    ]
}